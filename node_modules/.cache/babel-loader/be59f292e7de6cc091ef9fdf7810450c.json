{"ast":null,"code":"import _toConsumableArray from\"/Users/esoolgnah/Desktop/Projects/\\u1109\\u116D\\u1111\\u1175\\u11BC\\u1106\\u1169\\u11AF \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173 \\u1105\\u1175\\u1111\\u1162\\u11A8\\u1110\\u1169\\u1105\\u1175\\u11BC/CodingApple_Shopping_Mall_Refactoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/esoolgnah/Desktop/Projects/\\u1109\\u116D\\u1111\\u1175\\u11BC\\u1106\\u1169\\u11AF \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173 \\u1105\\u1175\\u1111\\u1162\\u11A8\\u1110\\u1169\\u1105\\u1175\\u11BC/CodingApple_Shopping_Mall_Refactoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";/* import Library */import React,{useEffect,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";function CheckBox(props){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),bChecked=_useState2[0],setBChecked=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),checked=_useState4[0],setChecked=_useState4[1];var changeChecked=function changeChecked(){setBChecked(!bChecked);};useEffect(function(){if(props.checkList.has(props.id)===true){setChecked(true);setBChecked(true);}else{setChecked(false);setBChecked(false);}},[props.checkList]);useEffect(function(){if(bChecked===true){var copy=new Set(_toConsumableArray(props.checkList));copy.add(props.id);props.setCheckList(copy);}else{var _copy=new Set(_toConsumableArray(props.checkList));_copy.delete(props.id);props.setCheckList(_copy);}},[bChecked]);return/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:checked,onChange:changeChecked});}export default CheckBox;","map":{"version":3,"sources":["/Users/esoolgnah/Desktop/Projects/쇼핑몰 프로젝트 리팩토링/CodingApple_Shopping_Mall_Refactoring/src/components/Cart/CheckBox.js"],"names":["React","useEffect","useState","CheckBox","props","bChecked","setBChecked","checked","setChecked","changeChecked","checkList","has","id","copy","Set","add","setCheckList","delete"],"mappings":"8sBAAA,oBACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,C,2CAEA,QAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,eACSF,QAAQ,CAAC,IAAD,CADjB,wCAChBG,QADgB,eACNC,WADM,8BAEOJ,QAAQ,CAAC,IAAD,CAFf,yCAEhBK,OAFgB,eAEPC,UAFO,eAIvB,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BH,WAAW,CAAC,CAACD,QAAF,CAAX,CACD,CAFD,CAIAJ,SAAS,CAAC,UAAM,CACd,GAAIG,KAAK,CAACM,SAAN,CAAgBC,GAAhB,CAAoBP,KAAK,CAACQ,EAA1B,IAAkC,IAAtC,CAA4C,CAC1CJ,UAAU,CAAC,IAAD,CAAV,CACAF,WAAW,CAAC,IAAD,CAAX,CACD,CAHD,IAGO,CACLE,UAAU,CAAC,KAAD,CAAV,CACAF,WAAW,CAAC,KAAD,CAAX,CACD,CACF,CARQ,CAQN,CAACF,KAAK,CAACM,SAAP,CARM,CAAT,CAUAT,SAAS,CAAC,UAAM,CACd,GAAII,QAAQ,GAAK,IAAjB,CAAuB,CACrB,GAAIQ,CAAAA,IAAI,CAAG,GAAIC,CAAAA,GAAJ,oBAAYV,KAAK,CAACM,SAAlB,EAAX,CACAG,IAAI,CAACE,GAAL,CAASX,KAAK,CAACQ,EAAf,EACAR,KAAK,CAACY,YAAN,CAAmBH,IAAnB,EACD,CAJD,IAIO,CACL,GAAIA,CAAAA,KAAI,CAAG,GAAIC,CAAAA,GAAJ,oBAAYV,KAAK,CAACM,SAAlB,EAAX,CACAG,KAAI,CAACI,MAAL,CAAYb,KAAK,CAACQ,EAAlB,EACAR,KAAK,CAACY,YAAN,CAAmBH,KAAnB,EACD,CACF,CAVQ,CAUN,CAACR,QAAD,CAVM,CAAT,CAYA,mBAAO,cAAO,IAAI,CAAC,UAAZ,CAAuB,OAAO,CAAEE,OAAhC,CAAyC,QAAQ,CAAEE,aAAnD,EAAP,CACD,CAED,cAAeN,CAAAA,QAAf","sourcesContent":["/* import Library */\nimport React, { useEffect, useState } from 'react';\n\nfunction CheckBox(props) {\n  const [bChecked, setBChecked] = useState(true);\n  const [checked, setChecked] = useState(true);\n\n  const changeChecked = () => {\n    setBChecked(!bChecked);\n  };\n\n  useEffect(() => {\n    if (props.checkList.has(props.id) === true) {\n      setChecked(true);\n      setBChecked(true);\n    } else {\n      setChecked(false);\n      setBChecked(false);\n    }\n  }, [props.checkList]);\n\n  useEffect(() => {\n    if (bChecked === true) {\n      let copy = new Set([...props.checkList]);\n      copy.add(props.id);\n      props.setCheckList(copy);\n    } else {\n      let copy = new Set([...props.checkList]);\n      copy.delete(props.id);\n      props.setCheckList(copy);\n    }\n  }, [bChecked]);\n\n  return <input type='checkbox' checked={checked} onChange={changeChecked} />;\n}\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}