{"ast":null,"code":"var _jsxFileName = \"/Users/esoolgnah/Desktop/Projects/\\u1109\\u116D\\u1111\\u1175\\u11BC\\u1106\\u1169\\u11AF \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173 \\u1105\\u1175\\u1111\\u1162\\u11A8\\u1110\\u1169\\u1105\\u1175\\u11BC/CodingApple_Shopping_Mall_Refactoring/src/components/Cart/CheckBox.js\",\n    _s = $RefreshSig$();\n\n/* import Library */\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CheckBox(props) {\n  _s();\n\n  const [bChecked, setBChecked] = useState(true);\n  const [checked, setChecked] = useState(true);\n\n  const changeChecked = () => {\n    setBChecked(!bChecked);\n  };\n\n  useEffect(() => {\n    if (props.checkList.has(props.id) === true) {\n      setChecked(true);\n      setBChecked(true);\n    } else {\n      setChecked(false);\n      setBChecked(false);\n    }\n  }, [props.checkList]);\n  useEffect(() => {\n    if (bChecked === true) {\n      let copy = new Set([...props.checkList]);\n      copy.add(props.id);\n      props.setCheckList(copy);\n    } else {\n      let copy = new Set([...props.checkList]);\n      copy.delete(props.id);\n      props.setCheckList(copy);\n    }\n  }, [bChecked]);\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"checkbox\",\n    checked: checked,\n    onChange: changeChecked\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n\n_s(CheckBox, \"125qbxcNJ9jlSKASYc8haeXrycQ=\");\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["/Users/esoolgnah/Desktop/Projects/쇼핑몰 프로젝트 리팩토링/CodingApple_Shopping_Mall_Refactoring/src/components/Cart/CheckBox.js"],"names":["React","useEffect","useState","CheckBox","props","bChecked","setBChecked","checked","setChecked","changeChecked","checkList","has","id","copy","Set","add","setCheckList","delete"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;;AAEA,QAAMO,aAAa,GAAG,MAAM;AAC1BH,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAK,CAACM,SAAN,CAAgBC,GAAhB,CAAoBP,KAAK,CAACQ,EAA1B,MAAkC,IAAtC,EAA4C;AAC1CJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAHD,MAGO;AACLE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GARQ,EAQN,CAACF,KAAK,CAACM,SAAP,CARM,CAAT;AAUAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,QAAQ,KAAK,IAAjB,EAAuB;AACrB,UAAIQ,IAAI,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGV,KAAK,CAACM,SAAV,CAAR,CAAX;AACAG,MAAAA,IAAI,CAACE,GAAL,CAASX,KAAK,CAACQ,EAAf;AACAR,MAAAA,KAAK,CAACY,YAAN,CAAmBH,IAAnB;AACD,KAJD,MAIO;AACL,UAAIA,IAAI,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAGV,KAAK,CAACM,SAAV,CAAR,CAAX;AACAG,MAAAA,IAAI,CAACI,MAAL,CAAYb,KAAK,CAACQ,EAAlB;AACAR,MAAAA,KAAK,CAACY,YAAN,CAAmBH,IAAnB;AACD;AACF,GAVQ,EAUN,CAACR,QAAD,CAVM,CAAT;AAYA,sBAAO;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,OAAO,EAAEE,OAAhC;AAAyC,IAAA,QAAQ,EAAEE;AAAnD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA/BQN,Q;;KAAAA,Q;AAiCT,eAAeA,QAAf","sourcesContent":["/* import Library */\nimport React, { useEffect, useState } from 'react';\n\nfunction CheckBox(props) {\n  const [bChecked, setBChecked] = useState(true);\n  const [checked, setChecked] = useState(true);\n\n  const changeChecked = () => {\n    setBChecked(!bChecked);\n  };\n\n  useEffect(() => {\n    if (props.checkList.has(props.id) === true) {\n      setChecked(true);\n      setBChecked(true);\n    } else {\n      setChecked(false);\n      setBChecked(false);\n    }\n  }, [props.checkList]);\n\n  useEffect(() => {\n    if (bChecked === true) {\n      let copy = new Set([...props.checkList]);\n      copy.add(props.id);\n      props.setCheckList(copy);\n    } else {\n      let copy = new Set([...props.checkList]);\n      copy.delete(props.id);\n      props.setCheckList(copy);\n    }\n  }, [bChecked]);\n\n  return <input type='checkbox' checked={checked} onChange={changeChecked} />;\n}\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}